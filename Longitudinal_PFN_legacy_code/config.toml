# to run: 
# conda activate fmripnet
# python /cbica/projects/PFN_ABCD/pNet/fmripnet.py -c config.toml --hpc

# This is a configuration file for computing personalized functional networks (FNs) given a set of preprocessed fMRI data
## Inputs:
#   1. Provide a txt file with a list of preprocesed fMRI scans, one on each line (symlinks)
#   2. Specifiy a brain template file, provide by pnet or prepared with data provided
#   3. Specify the number of FNs
#   4. Input group FN atlas
## Output:
#   Specify the result folder directory in dir_pnet_result

[necessary_settings]
## Inputs:
# 1. a txt file with a list of preprocessed fMRI scan file, one on each line
file_scans = "/cbica/projects/PFN_ABCD/long_PFN_scripts/pnet_inputs/19_Scan_List_Concat.txt"
# Combine_Scan=true -pNet concatenation is not working for us, so we do it manually via wb_command -cifti-merge
# 2. a brain template file. A HCP surface based template is set here, prepared by pnet
file_Brain_Template = "/cbica/projects/PFN_ABCD/.conda/envs/fmripnet/lib/python3.8/site-packages/pnet/Brain_Template/HCP_Surface/Brain_Template.json.zip"
# 3. the number of FNs to be computed, should be a positive integer number
K = 17

## Output: setup the output folder
dir_pnet_result = "/cbica/projects/PFN_ABCD/long_PFN_scripts/19_PFNs_INV10-_101525"

## specify the method for computing personalized FNs: SR-NMF or GIG-ICA
method="SR-NMF"

## date type and format information
# data type is surface
dataType = "Surface"
# data format is HCP surface
dataFormat = "HCP Surface (*.cifti, *.mat)"

[pFN_settings]
# 4. Using PNC group FNs- matrix with variable 'initV', shape 59412 x 17
file_gFN = "/cbica/projects/PFN_ABCD/PNC_Group_Atlas/PNC_group_atlas.mat"

[gFN_settings] #ignored since we provide group FNs, but kept for completeness
## for computing FNs at a group level by boostrapping the input data
# Setup number of scans loaded for each bootstrap run for estimating gFNs
# a larger number is preferred for robustness, but should be no larger than the avaiable scans
sampleSize = 10  # typical value: 100
# Setup number of runs for bootstraps
# a larger number is preferred for robustness, but with increased computational cost
nBS = 5        #typical value: 50
# a number of time points for computing group FNs with bootstraps
# this is for reducing the computational cost by using a partion of all avaiable time points of each fMRI scan
# for short fMRI scans all available time points should be used for robustness
nTPoints = 300   # all avaiable time points will be used if seting a value larger than the available number of time points

####################################################################################
# the following is ignored if no HPC computation (with sge or slurm) will be used  #
####################################################################################
[hpc_settings]
[hpc_settings.pnet_env]
# specify pnet installation information
dir_pnet="/cbica/projects/PFN_ABCD/.conda/envs/fmripnet/lib/python3.8/site-packages/pnet"
dir_env="/cbica/projects/PFN_ABCD/.conda/envs/fmripnet"
dir_python="/cbica/projects/PFN_ABCD/.conda/envs/fmripnet/bin/python"

# specify pnet
[hpc_settings.submit]
# Setup qsub commands
submit_command = "sbatch --parsable --time=24:00:00" # "qsub -terse -j y"
thread_command = "--ntasks-per-node=" #-pe threaded "
memory_command = "--mem="                   #"-l h_vmem="
log_command = "--output="  #"-o "

[hpc_settings.computation_resource]
# Computation resource request
memory_bootstrap= "100G"
thread_bootstrap= 2
memory_fusion= "10G"
thread_fusion= 4
memory_pFN= "10G"
thread_pFN= 1
memory_qc= "10G"
thread_qc= 1
memory_visualization= "20G"
thread_visualization= 1